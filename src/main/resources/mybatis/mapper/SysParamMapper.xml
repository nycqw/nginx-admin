<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eden.nginx.admin.mapper.SysParamMapper" >
  <resultMap id="BaseResultMap" type="com.eden.nginx.admin.domain.entity.SysParam" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="module" property="module" jdbcType="VARCHAR" />
    <result column="scope" property="scope" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="value" property="value" jdbcType="VARCHAR" />
    <result column="default_value" property="defaultValue" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, module, scope, name, value, default_value, description
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_param
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_param
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.eden.nginx.admin.domain.entity.SysParam" >
    insert into sys_param (id, module, scope, 
      name, value, default_value, 
      description)
    values (#{id,jdbcType=INTEGER}, #{module,jdbcType=VARCHAR}, #{scope,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, #{defaultValue,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.eden.nginx.admin.domain.entity.SysParam" >
    insert into sys_param
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="module != null" >
        module,
      </if>
      <if test="scope != null" >
        scope,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="value != null" >
        value,
      </if>
      <if test="defaultValue != null" >
        default_value,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="module != null" >
        #{module,jdbcType=VARCHAR},
      </if>
      <if test="scope != null" >
        #{scope,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="defaultValue != null" >
        #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.eden.nginx.admin.domain.entity.SysParam" >
    update sys_param
    <set >
      <if test="module != null" >
        module = #{module,jdbcType=VARCHAR},
      </if>
      <if test="scope != null" >
        scope = #{scope,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="defaultValue != null" >
        default_value = #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eden.nginx.admin.domain.entity.SysParam" >
    update sys_param
    set module = #{module,jdbcType=VARCHAR},
      scope = #{scope,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR},
      default_value = #{defaultValue,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>